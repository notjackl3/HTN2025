{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  console.error('Response error:', error);\n  if (error.response) {\n    // Server responded with error status\n    throw new Error(error.response.data.detail || 'Server error occurred');\n  } else if (error.request) {\n    // Request was made but no response received\n    throw new Error('Network error. Please check your connection.');\n  } else {\n    // Something else happened\n    throw new Error('An unexpected error occurred');\n  }\n});\n\n// Serious Mode API calls\nexport const seriousModeDetection = async formData => {\n  try {\n    const response = await api.post('/serious-mode', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Serious mode detection error:', error);\n    throw error;\n  }\n};\n\n// Fun Mode API calls\nexport const funModeDetection = async formData => {\n  try {\n    const response = await api.post('/fun-mode', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Fun mode detection error:', error);\n    throw error;\n  }\n};\n\n// Quest management\nexport const completeQuest = async (questId, userId = 'default_user') => {\n  try {\n    const response = await api.post('/complete-quest', null, {\n      params: {\n        quest_id: questId,\n        user_id: userId\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Complete quest error:', error);\n    throw error;\n  }\n};\n\n// Betting management\nexport const placeBet = async betData => {\n  try {\n    const response = await api.post('/place-bet', {\n      ...betData,\n      user_id: betData.user_id || 'default_user'\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Place bet error:', error);\n    throw error;\n  }\n};\nexport const resolveBet = async (betId, won, userId = 'default_user') => {\n  try {\n    const response = await api.post('/resolve-bet', null, {\n      params: {\n        bet_id: betId,\n        won: won,\n        user_id: userId\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Resolve bet error:', error);\n    throw error;\n  }\n};\nexport const getMoneyStats = async (userId = 'default_user') => {\n  try {\n    const response = await api.get(`/user/${userId}/money-stats`);\n    return response.data;\n  } catch (error) {\n    console.error('Get money stats error:', error);\n    throw error;\n  }\n};\n\n// User data\nexport const getUserBalance = async (userId = 'default_user') => {\n  try {\n    const response = await api.get(`/user/${userId}/balance`);\n    return response.data;\n  } catch (error) {\n    console.error('Get user balance error:', error);\n    throw error;\n  }\n};\nexport const getUserQuests = async (userId = 'default_user') => {\n  try {\n    const response = await api.get(`/user/${userId}/quests`);\n    return response.data;\n  } catch (error) {\n    console.error('Get user quests error:', error);\n    throw error;\n  }\n};\nexport const getUserBets = async (userId = 'default_user') => {\n  try {\n    const response = await api.get(`/user/${userId}/bets`);\n    return response.data;\n  } catch (error) {\n    console.error('Get user bets error:', error);\n    throw error;\n  }\n};\n\n// Health check\nexport const healthCheck = async () => {\n  try {\n    const response = await api.get('/');\n    return response.data;\n  } catch (error) {\n    console.error('Health check error:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","Error","data","detail","seriousModeDetection","formData","post","headers","funModeDetection","completeQuest","questId","userId","params","quest_id","user_id","placeBet","betData","resolveBet","betId","won","bet_id","getMoneyStats","get","getUserBalance","getUserQuests","getUserBets","healthCheck"],"sources":["/Users/notjackl3/Desktop/HTN2025/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('Response error:', error);\n    if (error.response) {\n      // Server responded with error status\n      throw new Error(error.response.data.detail || 'Server error occurred');\n    } else if (error.request) {\n      // Request was made but no response received\n      throw new Error('Network error. Please check your connection.');\n    } else {\n      // Something else happened\n      throw new Error('An unexpected error occurred');\n    }\n  }\n);\n\n// Serious Mode API calls\nexport const seriousModeDetection = async (formData) => {\n  try {\n    const response = await api.post('/serious-mode', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Serious mode detection error:', error);\n    throw error;\n  }\n};\n\n// Fun Mode API calls\nexport const funModeDetection = async (formData) => {\n  try {\n    const response = await api.post('/fun-mode', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Fun mode detection error:', error);\n    throw error;\n  }\n};\n\n// Quest management\nexport const completeQuest = async (questId, userId = 'default_user') => {\n  try {\n    const response = await api.post('/complete-quest', null, {\n      params: { quest_id: questId, user_id: userId },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Complete quest error:', error);\n    throw error;\n  }\n};\n\n// Betting management\nexport const placeBet = async (betData) => {\n  try {\n    const response = await api.post('/place-bet', {\n      ...betData,\n      user_id: betData.user_id || 'default_user',\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Place bet error:', error);\n    throw error;\n  }\n};\n\nexport const resolveBet = async (betId, won, userId = 'default_user') => {\n  try {\n    const response = await api.post('/resolve-bet', null, {\n      params: { bet_id: betId, won: won, user_id: userId },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Resolve bet error:', error);\n    throw error;\n  }\n};\n\nexport const getMoneyStats = async (userId = 'default_user') => {\n  try {\n    const response = await api.get(`/user/${userId}/money-stats`);\n    return response.data;\n  } catch (error) {\n    console.error('Get money stats error:', error);\n    throw error;\n  }\n};\n\n// User data\nexport const getUserBalance = async (userId = 'default_user') => {\n  try {\n    const response = await api.get(`/user/${userId}/balance`);\n    return response.data;\n  } catch (error) {\n    console.error('Get user balance error:', error);\n    throw error;\n  }\n};\n\nexport const getUserQuests = async (userId = 'default_user') => {\n  try {\n    const response = await api.get(`/user/${userId}/quests`);\n    return response.data;\n  } catch (error) {\n    console.error('Get user quests error:', error);\n    throw error;\n  }\n};\n\nexport const getUserBets = async (userId = 'default_user') => {\n  try {\n    const response = await api.get(`/user/${userId}/bets`);\n    return response.data;\n  } catch (error) {\n    console.error('Get user bets error:', error);\n    throw error;\n  }\n};\n\n// Health check\nexport const healthCheck = async () => {\n  try {\n    const response = await api.get('/');\n    return response.data;\n  } catch (error) {\n    console.error('Health check error:', error);\n    throw error;\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}